name: Build Windows EXE

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip setuptools wheel

      # ---------- Force-correct the requirements file (overwrites any bad content) ----------
      - name: Write clean windows-build-requirements.txt
        shell: pwsh
        run: |
          @'
          # ===================================================
          # WINDOWS BUILD REQUIREMENTS for EvidenceSynthesisApp
          # ===================================================

          # ---------- Core app ----------
          streamlit
          pandas
          numpy
          plotly
          matplotlib

          # ---------- OCR & PDF support ----------
          pdfplumber
          PyPDF2
          pytesseract
          pillow
          pdf2image

          # ---------- Data science & AI ----------
          scikit-learn
          sentence-transformers
          torch
          transformers

          # ---------- Excel & file handling ----------
          openpyxl
          xlrd

          # ---------- Build tools (for PyInstaller EXE) ----------
          pyinstaller==6.16.0
          altgraph
          pefile
          pywin32-ctypes

          # ---------- Optional utilities ----------
          pyyaml
          tqdm
          '@ | Set-Content -Path windows-build-requirements.txt -NoNewline

      - name: Show requirements (first 60 lines)
        shell: pwsh
        run: Get-Content windows-build-requirements.txt | Select-Object -First 60

      # ---------- Install deps ----------
      - name: Install dependencies
        run: pip install -r windows-build-requirements.txt

      # ---------- Build single-file EXE ----------
      - name: Build (release onefile + no console)
        run: >
          pyinstaller --clean --onefile --noconsole
          --name EvidenceSynthesisApp
          --collect-all streamlit
          --collect-all pandas
          --collect-all numpy
          app.py

      - name: Show dist/
        shell: pwsh
        run: Get-ChildItem -Recurse -File dist | Select-Object FullName, Length

      # ---------- Smoke test the EXE on the runner ----------
      - name: Smoke test .exe (start, ping, stop, log on fail)
        shell: pwsh
        run: |
          $exe = Join-Path "dist" "EvidenceSynthesisApp.exe"
          if (!(Test-Path $exe)) {
            Write-Host "❌ EXE not found at $exe"
            exit 1
          }

          $out = "streamlit-out.log"
          $err = "streamlit-err.log"
          $args = @(
            "--server.headless","true",
            "--server.address","127.0.0.1",
            "--server.port","8501",
            "--browser.gatherUsageStats","false"
          )
          $p = Start-Process -FilePath $exe -ArgumentList $args `
               -RedirectStandardOutput $out -RedirectStandardError $err -PassThru

          $ok = $false
          for ($i=0; $i -lt 45; $i++) {
            Start-Sleep -Seconds 1
            try {
              $resp = Invoke-WebRequest -Uri "http://127.0.0.1:8501/" -UseBasicParsing -TimeoutSec 2
              if ($resp.StatusCode -eq 200) { $ok = $true; break }
            } catch { }
          }

          if (-not $ok) {
            Write-Host "❌ App did not respond on http://127.0.0.1:8501/"
            if (Test-Path $out) { Write-Host "`n--- STDOUT (tail) ---"; Get-Content $out -Tail 200 }
            if (Test-Path $err) { Write-Host "`n--- STDERR (tail) ---"; Get-Content $err -Tail 200 }
            $warn = "build\EvidenceSynthesisApp\warn-EvidenceSynthesisApp.txt"
            if (Test-Path $warn) { Write-Host "`n--- PyInstaller warnings ---"; Get-Content $warn -Tail 200 }
            if ($p -and -not $p.HasExited) { Stop-Process -Id $p.Id -Force }
            exit 1
          }

          Write-Host "✅ App responded on http://127.0.0.1:8501/"
          if ($p -and -not $p.HasExited) { Stop-Process -Id $p.Id -Force }

      # ---------- Zip + upload artifact ----------
      - name: Zip release exe
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path upload | Out-Null
          Copy-Item dist\*.exe upload\ -ErrorAction SilentlyContinue
          Copy-Item dist\**\*.exe upload\ -ErrorAction SilentlyContinue
          Compress-Archive -Path upload\* -DestinationPath EvidenceSynthesisApp.zip -Force
          Get-ChildItem EvidenceSynthesisApp.zip | Select-Object Name, Length

      - name: Upload artifact (release)
        uses: actions/upload-artifact@v4
        with:
          name: EvidenceSynthesisApp
          path: EvidenceSynthesisApp.zip
          if-no-files-found: error
          retention-days: 7
